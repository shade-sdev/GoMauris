name: Build Compose Multiplatform (Android & iOS)

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build Android APK
        run: ./gradlew assembleRelease

      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: composeApp/build/outputs/apk/release/*.apk
          retention-days: 30

  build-ios:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build iOS IPA
        run: |
          cd iosApp
          ls -la
          
          # Check if workspace exists, otherwise use project
          if [ -f "iosApp.xcworkspace/contents.xcworkspacedata" ]; then
            PROJECT_TYPE="-workspace iosApp.xcworkspace"
          elif [ -d "iosApp.xcodeproj" ]; then
            PROJECT_TYPE="-project iosApp.xcodeproj"
          else
            echo "No Xcode workspace or project found"
            exit 1
          fi
          
          xcodebuild $PROJECT_TYPE \
                     -scheme iosApp \
                     -configuration Release \
                     -destination generic/platform=iOS \
                     -archivePath build/iosApp.xcarchive \
                     archive \
                     CODE_SIGNING_ALLOWED=NO
          
          xcodebuild -exportArchive \
                     -archivePath build/iosApp.xcarchive \
                     -exportPath build/ \
                     -exportOptionsPlist exportOptions.plist

      - name: Upload iOS IPA
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa
          path: iosApp/build/*.ipa
          retention-days: 30

  commit-artifacts:
    needs: [build-android, build-ios]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Android APK
        uses: actions/download-artifact@v4
        with:
          name: android-apk
          path: artifacts/android/

      - name: Download iOS IPA
        uses: actions/download-artifact@v4
        with:
          name: ios-ipa
          path: artifacts/ios/

      - name: Create artifacts directory structure
        run: |
          mkdir -p artifacts/android artifacts/ios
          ls -la artifacts/

      - name: Add timestamp to artifacts
        run: |
          timestamp=$(date +'%Y%m%d_%H%M%S')
          cd artifacts/android
          for file in *.apk; do
            if [ -f "$file" ]; then
              mv "$file" "${file%.*}_${timestamp}.apk"
            fi
          done
          cd ../ios
          for file in *.ipa; do
            if [ -f "$file" ]; then
              mv "$file" "${file%.*}_${timestamp}.ipa"
            fi
          done

      - name: Commit and push artifacts
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add artifacts/
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Add build artifacts - $(date +'%Y-%m-%d %H:%M:%S')"
            git push
          fi